version: 2
jobs:
  build:
    docker:
      - image: circleci/python:3.7
    working_directory: ~/devops
    steps:
      # 1. Obtain repo from Github
      - checkout

      # 2. Create a virtual environment and install dependencies
      - run:
          name: install dependencies
          command: |
            python3 -m venv venv
            . venv/bin/activate
            pip install -r requirements.txt
            
      - run:
          name: Upgrade flake8
          command: |
            . venv/bin/activate
            pip install --upgrade flake8

      # 3. Run coding convention software plus tester.
      - run:
          name: run tests
          command: |
            . venv/bin/activate
            flake8 --exclude=venv* --statistics
            pytest --junitxml=test-results/junit.xml

  deploy:
    docker:
      - image: circleci/python:3.7
    working_directory: ~/devops
    steps:
      # 1. Obtain repo from Github
      - checkout

      # 2. Activate virtual environment
      - run:
          name: create deployment directory
          command: |
            . venv/bin/activate
            DEPLOY_DIR="DEPLOY-$(date +'%Y-%m-%d_%H-%M-%S')"
            mkdir "$DEPLOY_DIR"

      # 3. Copy artifacts and deployment script to the deployment directory
      - run:
          name: copy artifacts and deployment script
          command: |
            cp -R test-results "$DEPLOY_DIR"
            cp deploy_script.sh "$DEPLOY_DIR"

      # 4. Deploy to server
      - run:
          name: deploy to server
          command: |
            . venv/bin/activate
            cd "$DEPLOY_DIR"
            ./deploy_script.sh
          environment:
            SERVER_HOST: your_server_host
            SSH_KEY: $SSH_KEY

      - store_artifacts:
          path: "$DEPLOY_DIR"

workflows:
  version: 2
  build_and_deploy:
    jobs:
      - build
      - deploy:
          requires:
            - build
          filters:
            branches:
              only: main
